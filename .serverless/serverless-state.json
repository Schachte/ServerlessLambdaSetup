{
  "service": {
    "service": "newsletter",
    "serviceObject": {
      "name": "newsletter"
    },
    "provider": {
      "name": "aws",
      "lambdaHashingVersion": "20201221",
      "runtime": "nodejs12.x",
      "memorySize": 256,
      "stage": "dev",
      "region": "us-west-2",
      "apiGateway": {
        "restApiId": "wiofowief23",
        "restApiRootResourceId": "24u234n"
      },
      "environment": {
        "SUBSCRIBED_USERS_TABLE_NAME": {
          "Ref": "UsersSubscriptionTable"
        }
      },
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:PutItem",
                "dynamodb:scan"
              ],
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "UsersSubscriptionTable",
                    "Arn"
                  ]
                }
              ]
            }
          ]
        }
      },
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "CreateEmailEntryLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/newsletter-dev-createEmailEntry"
            }
          },
          "RetrieveAllSubscribersLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/newsletter-dev-retrieveAllSubscribers"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "newsletter",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/newsletter-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/newsletter-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "newsletter",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "CreateEmailEntryLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/newsletter/dev/1642305063429-2022-01-16T03:51:03.429Z/newsletter.zip"
              },
              "Handler": "src/Email.addUser",
              "Runtime": "nodejs12.x",
              "FunctionName": "newsletter-dev-createEmailEntry",
              "MemorySize": 256,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "SUBSCRIBED_USERS_TABLE_NAME": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"SUBSCRIBED_USERS_TABLE_NAME\"]"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreateEmailEntryLogGroup"
            ]
          },
          "RetrieveAllSubscribersLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/newsletter/dev/1642305063429-2022-01-16T03:51:03.429Z/newsletter.zip"
              },
              "Handler": "src/Email.getUsers",
              "Runtime": "nodejs12.x",
              "FunctionName": "newsletter-dev-retrieveAllSubscribers",
              "MemorySize": 256,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "SUBSCRIBED_USERS_TABLE_NAME": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"SUBSCRIBED_USERS_TABLE_NAME\"]"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "RetrieveAllSubscribersLogGroup"
            ]
          },
          "CreateEmailEntryLambdaVersionlPbwZFsZiBbKSC6Hb2xKcKD39iZCwN7wmowZYVEG4Yc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateEmailEntryLambdaFunction"
              },
              "CodeSha256": "S9qZZPZMu1BsI7ZiaBvpKfr3EhoLggbCtEeAmZqMLkI="
            }
          },
          "RetrieveAllSubscribersLambdaVersionx2k9sONk5eWmxHbySCP23YMefXPXjAxZBsucqz2A": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "RetrieveAllSubscribersLambdaFunction"
              },
              "CodeSha256": "S9qZZPZMu1BsI7ZiaBvpKfr3EhoLggbCtEeAmZqMLkI="
            }
          },
          "ApiGatewayResourceSubscribe": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": "24u234n",
              "PathPart": "subscribe",
              "RestApiId": "wiofowief23"
            }
          },
          "ApiGatewayResourceUsers": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": "24u234n",
              "PathPart": "users",
              "RestApiId": "wiofowief23"
            }
          },
          "ApiGatewayMethodSubscribePost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceSubscribe"
              },
              "RestApiId": "wiofowief23",
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CreateEmailEntryLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "CreateEmailEntryLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodUsersGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUsers"
              },
              "RestApiId": "wiofowief23",
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "RetrieveAllSubscribersLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "RetrieveAllSubscribersLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1642305060581": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": "wiofowief23",
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodSubscribePost",
              "ApiGatewayMethodUsersGet"
            ]
          },
          "CreateEmailEntryLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateEmailEntryLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    "wiofowief23",
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "RetrieveAllSubscribersLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "RetrieveAllSubscribersLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    "wiofowief23",
                    "/*/*"
                  ]
                ],
                "Fn::Sub": "arn:aws:execute-api:us-west-2:${AWS::AccountId}/wiofowief23/*/GET/users"
              }
            }
          },
          "UsersSubscriptionTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "SubscribedUsers-dev",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "email",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "email",
                  "KeyType": "HASH"
                }
              ]
            }
          },
          "UsersSubscriptionReadAccessRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "AWS": {
                        "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:root"
                      }
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "ManagedPolicyArns": [
                {
                  "Ref": "UsersSubscriptionReadPolicy"
                }
              ]
            }
          },
          "UsersSubscriptionReadPolicy": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Sid": "AllowDynamoDBReadAccessFromLambda",
                    "Effect": "Allow",
                    "Action": [
                      "dynamodb:*"
                    ],
                    "Resource": "*"
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-newsletter-dev-ServerlessDeploymentBucketName"
            }
          },
          "CreateEmailEntryLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateEmailEntryLambdaVersionlPbwZFsZiBbKSC6Hb2xKcKD39iZCwN7wmowZYVEG4Yc"
            },
            "Export": {
              "Name": "sls-newsletter-dev-CreateEmailEntryLambdaFunctionQualifiedArn"
            }
          },
          "RetrieveAllSubscribersLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "RetrieveAllSubscribersLambdaVersionx2k9sONk5eWmxHbySCP23YMefXPXjAxZBsucqz2A"
            },
            "Export": {
              "Name": "sls-newsletter-dev-RetrieveAllSubscribersLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  "wiofowief23",
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-newsletter-dev-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "SubscribedUsersTable": {
        "name": {
          "Ref": "UsersSubscriptionTable"
        },
        "arn": {
          "Fn::GetAtt": [
            "UsersSubscriptionTable",
            "Arn"
          ]
        }
      },
      "bundle": {
        "linting": false
      },
      "webpack": {
        "packager": "npm",
        "packagerOptions": {},
        "webpackConfig": "../../node_modules/serverless-bundle/src/webpack.config.js",
        "includeModules": {
          "forceExclude": [
            "aws-sdk"
          ],
          "forceInclude": null,
          "packagePath": "../../package.json"
        },
        "excludeFiles": null,
        "excludeRegex": {},
        "keepOutputDirectory": false
      }
    },
    "plugins": [
      "serverless-bundle"
    ],
    "pluginsData": {},
    "functions": {
      "createEmailEntry": {
        "handler": "src/Email.addUser",
        "events": [
          {
            "http": {
              "method": "post",
              "path": "subscribe",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "newsletter-dev-createEmailEntry",
        "package": {
          "artifact": ".serverless/newsletter.zip"
        },
        "memory": 256,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "CreateEmailEntryLambdaVersionlPbwZFsZiBbKSC6Hb2xKcKD39iZCwN7wmowZYVEG4Yc"
      },
      "retrieveAllSubscribers": {
        "handler": "src/Email.getUsers",
        "events": [
          {
            "http": {
              "method": "get",
              "path": "users",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "newsletter-dev-retrieveAllSubscribers",
        "package": {
          "artifact": ".serverless/newsletter.zip"
        },
        "memory": 256,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "RetrieveAllSubscribersLambdaVersionx2k9sONk5eWmxHbySCP23YMefXPXjAxZBsucqz2A"
      }
    },
    "resources": {
      "Resources": {
        "UsersSubscriptionTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "SubscribedUsers-dev",
            "BillingMode": "PAY_PER_REQUEST",
            "AttributeDefinitions": [
              {
                "AttributeName": "email",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "email",
                "KeyType": "HASH"
              }
            ]
          }
        },
        "UsersSubscriptionReadAccessRole": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "AWS": {
                      "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:root"
                    }
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "ManagedPolicyArns": [
              {
                "Ref": "UsersSubscriptionReadPolicy"
              }
            ]
          }
        },
        "UsersSubscriptionReadPolicy": {
          "Type": "AWS::IAM::ManagedPolicy",
          "Properties": {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "AllowDynamoDBReadAccessFromLambda",
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:*"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        },
        "RetrieveAllSubscribersLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "RetrieveAllSubscribersLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Sub": "arn:aws:execute-api:us-west-2:${AWS::AccountId}/wiofowief23/*/GET/users"
            }
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "variablesResolutionMode": "20210326",
      "frameworkVersion": "2",
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "artifactDirectoryName": "serverless/newsletter/dev/1642305063429-2022-01-16T03:51:03.429Z",
    "artifact": ""
  }
}